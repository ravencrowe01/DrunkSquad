@model DrunkSquad.Models.User.RegistrationDetails

@{
    ViewData ["Title"] = "Register";
}

<style>
    #login-form {
        margin: auto;
        width: 60%;
    }

    #login {
        margin: auto;
        width: 50%;
    }

    .submit {
        margin-top: 10px;
    }
</style>

<div id="register">
    <form asp-controller="Registration" asp-action="Register" id="register-form" method="post">
        <h1>Register</h1>

        <div class="form-group">
            <label asp-for="ApiKey">API Key</label>
            <input asp-for="ApiKey" class="form-control input-sm" id="key" />
        </div>

        <div class="form-group">
            <label asp-for="Password">Password</label>
            <input asp-for="Password" class="form-control input-sm" id="password" type="password"/>
        </div>

        <div class="form-group">
            <label asp-for="Password">Confirm Password</label>
            <input asp-for="Password" class="form-control input-sm" id="password" type="password" />
        </div>

        <input type="submit" value="Submit" class="submit" />
    </form>

    @switch(Model.Status) {
        case DrunkSquad.Models.User.RegistrationStatus.Registered:
            break;
        case DrunkSquad.Models.User.RegistrationStatus.NoResponse:
            break;
        case DrunkSquad.Models.User.RegistrationStatus.InvalidKey:
            break;
        case DrunkSquad.Models.User.RegistrationStatus.KeyInUse:
            break;
        case DrunkSquad.Models.User.RegistrationStatus.AlreadyRegistered:
            break;
        case DrunkSquad.Models.User.RegistrationStatus.InvalidApiResponse:
            break;
    }
</div>