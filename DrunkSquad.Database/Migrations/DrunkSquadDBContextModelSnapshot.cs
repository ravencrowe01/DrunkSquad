// <auto-generated />
using System;
using DrunkSquad.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DrunkSquad.Database.Migrations
{
    [DbContext(typeof(DrunkSquadDBContext))]
    partial class DrunkSquadDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DrunkSquad.Models.User.DSUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("Awards")
                        .HasColumnType("integer");

                    b.Property<bool>("Donator")
                        .HasColumnType("boolean");

                    b.Property<int>("Enemies")
                        .HasColumnType("integer");

                    b.Property<int?>("FactionID")
                        .HasColumnType("integer");

                    b.Property<int>("ForumPosts")
                        .HasColumnType("integer");

                    b.Property<int>("Friends")
                        .HasColumnType("integer");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<int>("Honor")
                        .HasColumnType("integer");

                    b.Property<int?>("JobID")
                        .HasColumnType("integer");

                    b.Property<int>("Karma")
                        .HasColumnType("integer");

                    b.Property<int?>("LastActionID")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int?>("LifeID")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginDetailsID")
                        .HasColumnType("integer");

                    b.Property<int?>("MarriageID")
                        .HasColumnType("integer");

                    b.Property<int?>("MembershipInfoID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .HasColumnType("text");

                    b.Property<bool>("Revivable")
                        .HasColumnType("boolean");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Signup")
                        .HasColumnType("text");

                    b.Property<int?>("StatesID")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("FactionID");

                    b.HasIndex("JobID");

                    b.HasIndex("LastActionID");

                    b.HasIndex("LifeID");

                    b.HasIndex("LoginDetailsID");

                    b.HasIndex("MarriageID");

                    b.HasIndex("MembershipInfoID");

                    b.HasIndex("StatesID");

                    b.HasIndex("StatusID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DrunkSquad.Models.User.LoginDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("ApiKey")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("LoginDetails");
                });

            modelBuilder.Entity("TornApi.Net.Models.Common.Bar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("Current")
                        .HasColumnType("integer");

                    b.Property<int>("Fulltime")
                        .HasColumnType("integer");

                    b.Property<int>("Increment")
                        .HasColumnType("integer");

                    b.Property<int>("Interval")
                        .HasColumnType("integer");

                    b.Property<int>("Maximum")
                        .HasColumnType("integer");

                    b.Property<int>("OwnerID")
                        .HasColumnType("integer");

                    b.Property<int>("Ticktime")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("TornApi.Net.Models.Common.LastAction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("OwnerID")
                        .HasColumnType("integer");

                    b.Property<string>("Relative")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long?>("Timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("LastActions");
                });

            modelBuilder.Entity("TornApi.Net.Models.Common.Marriage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<int>("OwnerID")
                        .HasColumnType("integer");

                    b.Property<int>("SpouseID")
                        .HasColumnType("integer");

                    b.Property<string>("SpouseName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Marriages");
                });

            modelBuilder.Entity("TornApi.Net.Models.Common.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<int?>("CrimeID")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<int>("OwnerID")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<long>("Until")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CrimeID");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("TornApi.Net.Models.Faction.Crime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("FactionID")
                        .HasColumnType("integer");

                    b.Property<bool>("Initiated")
                        .HasColumnType("boolean");

                    b.Property<int>("InitiatedBy")
                        .HasColumnType("integer");

                    b.Property<int>("MoneyGain")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PlannedBy")
                        .HasColumnType("integer");

                    b.Property<int>("RespectGain")
                        .HasColumnType("integer");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.Property<long>("TimeComplete")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeCreated")
                        .HasColumnType("bigint");

                    b.Property<int>("TimeLeft")
                        .HasColumnType("integer");

                    b.Property<long>("TimeReady")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Crimes");
                });

            modelBuilder.Entity("TornApi.Net.Models.Faction.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("DaysInFaction")
                        .HasColumnType("integer");

                    b.Property<int>("FactionID")
                        .HasColumnType("integer");

                    b.Property<int?>("LastActionID")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<int?>("StatusID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("LastActionID");

                    b.HasIndex("StatusID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.FactionStub", b =>
                {
                    b.Property<int>("FactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FactionID"));

                    b.Property<int>("DaysInFaction")
                        .HasColumnType("integer");

                    b.Property<string>("FactionTag")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.HasKey("FactionID");

                    b.ToTable("FactionStubs");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Job", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OwnerID")
                        .HasColumnType("integer");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.PlayerStates", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<long>("HospitalTimestamp")
                        .HasColumnType("bigint");

                    b.Property<long>("JailTimestamp")
                        .HasColumnType("bigint");

                    b.Property<int>("OwnerID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("PlayerStates");
                });

            modelBuilder.Entity("DrunkSquad.Models.User.DSUser", b =>
                {
                    b.HasOne("TornApi.Net.Models.User.FactionStub", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionID");

                    b.HasOne("TornApi.Net.Models.User.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobID");

                    b.HasOne("TornApi.Net.Models.Common.LastAction", "LastAction")
                        .WithMany()
                        .HasForeignKey("LastActionID");

                    b.HasOne("TornApi.Net.Models.Common.Bar", "Life")
                        .WithMany()
                        .HasForeignKey("LifeID");

                    b.HasOne("DrunkSquad.Models.User.LoginDetails", "LoginDetails")
                        .WithMany()
                        .HasForeignKey("LoginDetailsID");

                    b.HasOne("TornApi.Net.Models.Common.Marriage", "Marriage")
                        .WithMany()
                        .HasForeignKey("MarriageID");

                    b.HasOne("TornApi.Net.Models.Faction.Member", "MembershipInfo")
                        .WithMany()
                        .HasForeignKey("MembershipInfoID");

                    b.HasOne("TornApi.Net.Models.User.PlayerStates", "States")
                        .WithMany()
                        .HasForeignKey("StatesID");

                    b.HasOne("TornApi.Net.Models.Common.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");

                    b.Navigation("Faction");

                    b.Navigation("Job");

                    b.Navigation("LastAction");

                    b.Navigation("Life");

                    b.Navigation("LoginDetails");

                    b.Navigation("Marriage");

                    b.Navigation("MembershipInfo");

                    b.Navigation("States");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TornApi.Net.Models.Common.Status", b =>
                {
                    b.HasOne("TornApi.Net.Models.Faction.Crime", null)
                        .WithMany("Members")
                        .HasForeignKey("CrimeID");
                });

            modelBuilder.Entity("TornApi.Net.Models.Faction.Member", b =>
                {
                    b.HasOne("TornApi.Net.Models.Common.LastAction", "LastAction")
                        .WithMany()
                        .HasForeignKey("LastActionID");

                    b.HasOne("TornApi.Net.Models.Common.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");

                    b.Navigation("LastAction");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TornApi.Net.Models.Faction.Crime", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
