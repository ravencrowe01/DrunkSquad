// <auto-generated />
using System;
using DrunkSquad.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DrunkSquad.Database.Migrations
{
    [DbContext(typeof(DrunkSquadDBContext))]
    [Migration("20240102041846_RedoInitial")]
    partial class RedoInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DrunkSquad.Models.Faction.CrimeParticipant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("CrimeID")
                        .HasColumnType("integer");

                    b.Property<int?>("ParticipantMemberID")
                        .HasColumnType("integer");

                    b.HasKey("ID")
                        .HasName("CrimeParticipantID");

                    b.HasIndex("CrimeID");

                    b.HasIndex("ParticipantMemberID");

                    b.ToTable("CrimeParticipants");
                });

            modelBuilder.Entity("DrunkSquad.Models.Users.LoginDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("ApiKey")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("LoginDetails");
                });

            modelBuilder.Entity("DrunkSquad.Models.Users.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserID"));

                    b.Property<int?>("LoginDetailsID")
                        .HasColumnType("integer");

                    b.Property<int?>("ProfileID")
                        .HasColumnType("integer");

                    b.Property<int>("WebsiteRole")
                        .HasColumnType("integer");

                    b.HasKey("UserID");

                    b.HasIndex("LoginDetailsID");

                    b.HasIndex("ProfileID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TornApi.Net.Models.Faction.Basic", b =>
                {
                    b.Property<int>("FactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FactionID"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("BestChain")
                        .HasColumnType("integer");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<int>("ColeaderID")
                        .HasColumnType("integer");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<int>("LeaderID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Respect")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<string>("TagImage")
                        .HasColumnType("text");

                    b.HasKey("FactionID")
                        .HasName("FactionID");

                    b.ToTable("Basic");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Basic");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TornApi.Net.Models.Faction.Crime", b =>
                {
                    b.Property<int>("CrimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CrimeID"));

                    b.Property<int>("CrimeType")
                        .HasColumnType("integer");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<bool>("Initiated")
                        .HasColumnType("boolean");

                    b.Property<int>("InitiatedBy")
                        .HasColumnType("integer");

                    b.Property<int>("MoneyGain")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PlannedBy")
                        .HasColumnType("integer");

                    b.Property<int>("RespectGain")
                        .HasColumnType("integer");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.Property<long>("TimeComplete")
                        .HasColumnType("bigint");

                    b.Property<int>("TimeLeft")
                        .HasColumnType("integer");

                    b.Property<long>("TimeReady")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeStarted")
                        .HasColumnType("bigint");

                    b.HasKey("CrimeID")
                        .HasName("FactionCrimeID");

                    b.ToTable("Crime");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Crime");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TornApi.Net.Models.Faction.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MemberID"));

                    b.Property<int>("DaysInFaction")
                        .HasColumnType("integer");

                    b.Property<int>("FactionID")
                        .HasColumnType("integer");

                    b.Property<int?>("FactionInfoFactionID")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.HasKey("MemberID")
                        .HasName("MemberID");

                    b.HasIndex("FactionInfoFactionID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Bar", b =>
                {
                    b.Property<int>("BarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BarID"));

                    b.Property<int>("Current")
                        .HasColumnType("integer");

                    b.Property<int>("Fulltime")
                        .HasColumnType("integer");

                    b.Property<int>("Increment")
                        .HasColumnType("integer");

                    b.Property<int>("Interval")
                        .HasColumnType("integer");

                    b.Property<int>("Maximum")
                        .HasColumnType("integer");

                    b.Property<int?>("ProfileID")
                        .HasColumnType("integer");

                    b.Property<int>("Ticktime")
                        .HasColumnType("integer");

                    b.HasKey("BarID");

                    b.HasIndex("ProfileID");

                    b.ToTable("Bar");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Job", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JobID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("JobID")
                        .HasName("JobID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.LastAction", b =>
                {
                    b.Property<int>("LastActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LastActionID"));

                    b.Property<string>("Relative")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long?>("Timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("LastActionID")
                        .HasName("LastActionID");

                    b.ToTable("LastActions");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Marriage", b =>
                {
                    b.Property<int>("MarriageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MarriageID"));

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<int>("SpouseID")
                        .HasColumnType("integer");

                    b.Property<string>("SpouseName")
                        .HasColumnType("text");

                    b.HasKey("MarriageID")
                        .HasName("MarriageID");

                    b.ToTable("Marriages");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.PlayerStates", b =>
                {
                    b.Property<int>("PlayerStatesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PlayerStatesID"));

                    b.Property<long>("HospitalTimestamp")
                        .HasColumnType("bigint");

                    b.Property<long>("JailTimestamp")
                        .HasColumnType("bigint");

                    b.HasKey("PlayerStatesID")
                        .HasName("PlayerStatesID");

                    b.ToTable("PlayerStates");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Profile", b =>
                {
                    b.Property<int>("ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProfileID"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("Awards")
                        .HasColumnType("integer");

                    b.Property<bool>("Donator")
                        .HasColumnType("boolean");

                    b.Property<int>("Enemies")
                        .HasColumnType("integer");

                    b.Property<int>("ForumPosts")
                        .HasColumnType("integer");

                    b.Property<int>("Friends")
                        .HasColumnType("integer");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<int>("Honor")
                        .HasColumnType("integer");

                    b.Property<int?>("JobID")
                        .HasColumnType("integer");

                    b.Property<int>("Karma")
                        .HasColumnType("integer");

                    b.Property<int?>("LastActionID")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int?>("MarriageID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .HasColumnType("text");

                    b.Property<bool>("Revivable")
                        .HasColumnType("boolean");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Signup")
                        .HasColumnType("text");

                    b.Property<int?>("StatesPlayerStatesID")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusID")
                        .HasColumnType("integer");

                    b.HasKey("ProfileID")
                        .HasName("ProfileID");

                    b.HasIndex("JobID");

                    b.HasIndex("LastActionID");

                    b.HasIndex("MarriageID");

                    b.HasIndex("StatesPlayerStatesID");

                    b.HasIndex("StatusID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatusID"));

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<long>("Until")
                        .HasColumnType("bigint");

                    b.HasKey("StatusID")
                        .HasName("ProfiStatusIDleID");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("DrunkSquad.Models.Faction.FactionInfo", b =>
                {
                    b.HasBaseType("TornApi.Net.Models.Faction.Basic");

                    b.HasDiscriminator().HasValue("FactionInfo");
                });

            modelBuilder.Entity("DrunkSquad.Models.Faction.FactionCrime", b =>
                {
                    b.HasBaseType("TornApi.Net.Models.Faction.Crime");

                    b.HasDiscriminator().HasValue("FactionCrime");
                });

            modelBuilder.Entity("DrunkSquad.Models.Faction.CrimeParticipant", b =>
                {
                    b.HasOne("DrunkSquad.Models.Faction.FactionCrime", "Crime")
                        .WithMany("CrimeParticipants")
                        .HasForeignKey("CrimeID");

                    b.HasOne("TornApi.Net.Models.Faction.Member", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantMemberID");

                    b.Navigation("Crime");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("DrunkSquad.Models.Users.User", b =>
                {
                    b.HasOne("DrunkSquad.Models.Users.LoginDetails", "LoginDetails")
                        .WithMany()
                        .HasForeignKey("LoginDetailsID");

                    b.HasOne("TornApi.Net.Models.User.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileID");

                    b.Navigation("LoginDetails");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("TornApi.Net.Models.Faction.Member", b =>
                {
                    b.HasOne("DrunkSquad.Models.Faction.FactionInfo", null)
                        .WithMany("MembersList")
                        .HasForeignKey("FactionInfoFactionID");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Bar", b =>
                {
                    b.HasOne("TornApi.Net.Models.User.Profile", null)
                        .WithMany("Bars")
                        .HasForeignKey("ProfileID");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Profile", b =>
                {
                    b.HasOne("TornApi.Net.Models.User.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobID");

                    b.HasOne("TornApi.Net.Models.User.LastAction", "LastAction")
                        .WithMany()
                        .HasForeignKey("LastActionID");

                    b.HasOne("TornApi.Net.Models.User.Marriage", "Marriage")
                        .WithMany()
                        .HasForeignKey("MarriageID");

                    b.HasOne("TornApi.Net.Models.User.PlayerStates", "States")
                        .WithMany()
                        .HasForeignKey("StatesPlayerStatesID");

                    b.HasOne("TornApi.Net.Models.User.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");

                    b.Navigation("Job");

                    b.Navigation("LastAction");

                    b.Navigation("Marriage");

                    b.Navigation("States");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TornApi.Net.Models.User.Profile", b =>
                {
                    b.Navigation("Bars");
                });

            modelBuilder.Entity("DrunkSquad.Models.Faction.FactionInfo", b =>
                {
                    b.Navigation("MembersList");
                });

            modelBuilder.Entity("DrunkSquad.Models.Faction.FactionCrime", b =>
                {
                    b.Navigation("CrimeParticipants");
                });
#pragma warning restore 612, 618
        }
    }
}
